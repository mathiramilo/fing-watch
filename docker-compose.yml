version: '3'
services:
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379

  mongo:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: data
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  gorse:
    image: zhenghaoz/gorse-in-one
    restart: unless-stopped
    ports:
      - 8086:8086 # gRPC port
      - 8088:8088 # HTTP port
    environment:
      # Use Redis as cache storage backend.
      GORSE_CACHE_STORE: redis://redis:6379
      # Use MongoDB as data storage backend.
      GORSE_DATA_STORE: mongodb://admin:admin@mongo:27017/gorse?authSource=admin
    command: >
      -c /etc/gorse/config.toml  --log-path /var/log/gorse/master.log  --cache-path /var/lib/gorse/master_cache.data
    volumes:
      # Mount the configuration file.
      - ./config.toml:/etc/gorse/config.toml
    depends_on:
      - redis
      - mongo

  data-refresh:
    build:
      context: ./data-refresh
      dockerfile: Dockerfile
    env_file:
      - data-refresh/.env
    depends_on:
      - typesense
      - gorse
    volumes:
      - images:/images

  flask:
    depends_on:
      - mongo
      - gorse
      - typesense
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    env_file:
      - backend/.env

  typesense:
    image: typesense/typesense:0.25.1
    ports:
      - 8108:8108
    environment:
      TYPESENSE_API_KEY: xyz
      TYPESENSE_DATA_DIR: /data/typesense
      TYPESENSE_ENABLE_CORS: 'true'
    volumes:
      - typesense:/data/typesense

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - frontend/.env.local
    depends_on:
      - flask

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - images:/images
    restart: always
    depends_on:
      - web
      - flask

volumes:
  typesense:
    driver: local
  images:
    driver: local
  mongo_data:
    driver: local
